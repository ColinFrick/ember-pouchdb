!function(){var a,b;!function(){var c={},d={};a=function(a,b,d){c[a]={deps:b,callback:d}},b=function(a){if(d[a])return d[a];d[a]={};var e=c[a];if(!e)throw new Error("Module '"+a+"' not found.");for(var f,g=e.deps,h=e.callback,i=[],j=0,k=g.length;k>j;j++)i.push("exports"===g[j]?f={}:b(g[j]));var l=h.apply(this,i);return d[a]=f||l}}(),a("ember-pouchdb/get_initializer",["ember-pouchdb/storage","ember-pouchdb/promise_tracker","exports"],function(a,b,c){"use strict";var d=a.Storage,e=b.PromiseTracker,f=function(a,b){return a=Ember.merge({name:"PouchDB",propName:"pouch",dbName:"PouchDB",fullName:"pouch:main",types:["controller","route"],docTypes:{}},a),"undefined"==typeof b&&(b=function(b,c){c.register(a.fullName,d.extend({dbName:c.get("pouch.dbName")||a.dbName,docTypes:c.get("pouch.docTypes")||a.docTypes})),a.types.forEach(function(b){c.inject(b,a.propName,a.fullName)}),Ember.testing&&(c.register("promiseTracker:pouch",e),c.inject(a.fullName,"tracker","promiseTracker:pouch"))}),a.initialize=b,a};c.get_initializer=f}),a("ember-pouchdb/model",["exports"],function(a){"use strict";var b=Ember.Object.extend(Ember.Copyable,{copy:function(){var a=this.serialize();return a.id=this.get("id"),a.rev=this.get("rev"),this.constructor.create(a)},serialize:function(){throw new Error(Ember.String.fmt("%@ must implement serialize() method which returns JSON of this model.",[this]))}});a.Model=b}),a("ember-pouchdb/promise_tracker",["exports"],function(a){"use strict";var b=Ember.ArrayProxy.extend({init:function(){var a=this;Ember.FEATURES.isEnabled("ember-testing-wait-hooks")&&Ember.Test.registerWaiter(function(){return a.areFulfilled()===!0}),this.set("content",[])},newPromise:function(a){var b=new Ember.RSVP.Promise(a);return this.pushObject(b),b},areFulfilled:function(){return this.everyBy("isFulfilled")}});a.PromiseTracker=b}),a("ember-pouchdb/storage",["ember-pouchdb/model","exports"],function(a,b){"use strict";var c=a.Model,d=Ember.Object.extend({dbName:null,docTypes:{},remoteCouch:null,init:function(){var a=this;this.getDB(),Em.isEmpty(this.get("remoteCouch"))||this.setupReplication(this.get("remoteCouch")),this.getDB().then(function(b){b.put(a.createDesignDoc("by_doctype",function(a){emit(a.docType)}))})},getDB:function(a,b){var c=this,d=this.get("_dbPromise");return Em.isEmpty(d)&&(d=this.create(a,b),d.then(function(a){return c.set("_db",a),a}),this.set("_dbPromise",d)),d},createDesignDoc:function(a,b){var c={_id:"_design/"+a,views:{}};return c.views[a]={map:b.toString()},c},setupReplication:function(a){Em.assert("No remote couch specified.",a),this.set("_replication",PouchDB.sync(this.get("dbName"),a,{live:!0}))},cancelReplication:function(){Em.isEmpty(this.get("_replication"))||(this.get("_replication").cancel(),this.set("_replication",null))},create:function(a,b){"undefined"==typeof a&&(a=this.get("dbName")),"undefined"==typeof b&&(b={});var c=function(c,d){var e=function(a,b){Ember.run(function(){a?d(a):c(b)})};new PouchDB(a,b,e)};return this._newPromise(c)},findAll:function(a,b){var c=this.get("docTypes."+a);Ember.assert("You have to register %@ docType before you can query by it. Look at docTypes property in PouchStorage class.".fmt(a),c),"undefined"==typeof b&&(b={reduce:!1}),b.include_docs=!0,b.key=a;var d=this,e=function(a){var c=d._newPromise(function(c,d){var e=function(a,b){Ember.run(function(){a?d(a):c(b)})};a.query("by_doctype",b,e)});return c},f=function(a){return Em.A(a.rows).map(function(a){var b=c.create(a.doc);return b.setProperties({id:a.doc._id,rev:a.doc._rev}),b})};return this.getDB().then(e).then(f)},query:function(a,b){var c=this;"undefined"==typeof b&&(b={}),b.reduce=!1,b.include_docs=!0;var d=function(d){return c._newPromise(function(c,e){var f=function(a,b){Ember.run(function(){a?e(a):c(b)})};d.query(a,b,f)})},e=function(a){return Em.A(a.rows).map(function(a){var b=a.doc,d=c.get("docTypes."+b.docType);Ember.assert("You have to register %@ docType before you can query by it. Look at docTypes property in PouchStorage class.".fmt(b.docType),d);var e=d.create(b);return e.setProperties({id:b._id,rev:b._rev}),e})};return this.getDB().then(d).then(e)},GET:function(a,b){"undefined"==typeof b&&(b={});var d=this,e=function(c){var e=d._newPromise(function(d,e){var f=function(a,b){Ember.run(function(){a?e(a):d(b)})};c.get(a,b,f)});return e},f=function(a){var b;if(a.hasOwnProperty("docType")&&d.get("docTypes."+a.docType)){var e=d.get("docTypes."+a.docType);b=e.create(a)}else b=c.create(a);return b.setProperties({id:a._id,rev:a._rev}),delete b._id,delete b._rev,b};return this.getDB().then(e).then(f)},POST:function(a,b){var c=this;if(Em.isArray(a)){var d=[];a.forEach(function(a){var b=a.serialize(),e=c.getDocType(a.constructor);Em.assert("Model doesn't have a corresponding doc type.",e),b.docType=e,a.set("docType",e),d.push(b)});var e=function(a){var e=c._newPromise(function(c,e){var f=function(a,b){Ember.run(function(){a?e(a):c(b)})};a.bulkDocs(d,b,f)});return e},f=function(b){return b.forEach(function(b,c){a[c].set("id",b.id),a[c].set("rev",b.rev)}),a};return this.getDB().then(e).then(f)}var g=a.serialize(),h=this.getDocType(a.constructor);Em.assert("Model doesn't have a corresponding doc type.",h),g.docType=h;var i=function(a){var d=c._newPromise(function(c,d){var e=function(a,b){Ember.run(function(){a?d(a):c(b)})};a.post(g,b,e)});return d},j=function(b){return a.set("id",b.id),a.set("rev",b.rev),a.set("docType",h),a};return this.getDB().then(i).then(j)},PUT:function(a,b){var c=this,d=a.serialize();"undefined"==typeof b&&(b={}),a.get("docType")||a.set("docType",this.getDocType(a.constructor)),d.docType=a.get("docType")||this.getDocType(a.constructor),d._id=a.get("id"),d._rev=a.get("rev");var e=function(a){var e=c._newPromise(function(c,e){var f=function(a,b){Ember.run(function(){a?e(a):c(b)})};a.put(d,b,f)});return e},f=function(b){return a.setProperties({id:b.id,rev:b.rev}),a};return this.getDB().then(e).then(f)},DELETE:function(a,b){var c;"undefined"==typeof b&&(b={}),Em.isArray(a)?(c=[],a.forEach(function(a){c.push({_id:a.get("id"),_rev:a.get("rev"),_deleted:!0})})):c={_id:a.get("id"),_rev:a.get("rev")};var d=this,e=function(a){var e=d._newPromise(function(d,e){var f=function(a){Ember.run(function(){a?e(a):d()})};Em.isArray(c)?a.bulkDocs(c,b,f):a.remove(c,b,f)});return e};return this.getDB().then(e)},remove:function(a){var b=this,c=b.get("dbName");"undefined"==typeof a&&(a={});var d=function(a,b){var d=function(c,d){Ember.run(function(){c?b(c):a(d)})};PouchDB.destroy(c,d)};return this._newPromise(d)},getDocType:function(a){var b=!1,c=this.get("docTypes");return Object.keys(c).find(function(d){return Em.isEqual(c[d],a)&&(b=d),b}),b},_newPromise:function(a){var b;return null!=this.tracker?(b=this.tracker.newPromise(a),b.stack=(new Error).stack):b=new Ember.RSVP.Promise(a),b}});b.Storage=d}),a("ember-pouchdb",["ember-pouchdb/get_initializer","ember-pouchdb/model","ember-pouchdb/storage","exports"],function(a,b,c,d){"use strict";var e=a.get_initializer,f=b.Model,g=c.Storage;d.get_initializer=e,d.Model=f,d.Storage=g}),window.EPDB=b("ember-pouchdb")}(window);